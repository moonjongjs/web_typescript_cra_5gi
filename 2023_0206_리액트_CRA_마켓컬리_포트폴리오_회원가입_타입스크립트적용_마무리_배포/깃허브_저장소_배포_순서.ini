
1. 깃허브접속 
2. 저장소(리파지토리) 생성
3. 포트폴리오 vs code 깃배쉬 실행
4. 깃설정 git init
git init

5. 환경설정 config 사용자이름, 이메일 설정하기
git config user.name 'moonjongjs'
git config user.email 'moonseonjong@naver.com'


// 확인
$ git config user.name
moonjongjs

$ git config user.email
moonseonjong@naver.com




6-1. 원격지 리모트 remote  주소  추가 add 오리진 origin
git remote add origin https://github.com/moonjongjs/react_typescript_kurly_20230206.git


6-2. 다른 저장소 원격지 리모트 remote  주소  추가 add 오리진 origin
     이전 원격지 리모트 오리진 삭제하기

git remote remove origin 
git remote -v

git remote add origin https://github.com/moonjongjs/kurl_web.git





origin  https://github.com/moonjongjs/react_typescript_kurly_20230206.git (fetch)
origin  https://github.com/moonjongjs/react_typescript_kurly_20230206.git (push)

// 확인
$ git remote -v
origin  https://github.com/moonjongjs/react_typescript_kurly_20230206.git (fetch)
origin  https://github.com/moonjongjs/react_typescript_kurly_20230206.git (push)


7. 저장소(리파지토리)에 스테이징 add : 올릴파일들 모두 스테이징하기

git add .


8. 커밋 commit 하기 메시지
git commit  -m  '마켓컬리 리액트 타입스크립 적용 웹페이지 배포'



9. 푸쉬하기 push
git push origin master


10. 깃허브 새로고침하고
하단 이동
 Deployment 배포 에서 사이트 클릭 이동

 https://create-react-app.dev/docs/deployment/ 


 11. GitHub Pages  로  한참내려온다.
 Step 1: Add homepage to package.json

 
typescript_react_cra_20230206


   "homepage": "https://moonjongjs.github.io/typescript_react_cra_20230206"

package.json 

맨아래에 내용 붙여넣기 한다.
:
:
:
  },
  "homepage": "https://moonjongjs.github.io/typescript_react_cra_20230206"
}

12. 
Step 2: Install gh-pages and add deploy to scripts in package.json

npm install --save gh-pages


"deploy": "gh-pages -d build",
"deploy": "gh-pages -b master -d build",


13.  퍼블리싱
npm run deploy

; 경로가 너무 길어서 실패
D:\프론트앤드_강사문종\강의산출물\프론트앤드_5기_월수금\강사산출물\2023_0206_리액트_CRA_마켓컬리_포트폴리오_회원가입_타입스크립트적용_마무리